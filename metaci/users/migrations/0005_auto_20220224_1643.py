# Generated by Django 3.1.14 on 2022-02-24 16:43
from django.contrib.auth.management import create_permissions
from django.contrib.auth.models import Permission
from django.db import migrations
from django.db.models import QuerySet

# Permission.codename
RELEASE_MANAGER_PERMISSIONS = [
    "add_release",
    "change_release",
    "add_releasecohort",
    "change_releasecohort",
]


def make_release_managers_group(apps, schema_editor):
    # Create release managers group with desired perms
    Group = apps.get_model("auth", "Group")
    g = Group.objects.create(name="Release Managers")
    permissions = get_release_manager_permissions(apps)
    [g.permissions.add(perm) for perm in permissions]


def get_release_manager_permissions(apps) -> QuerySet(Permission):
    Permission = apps.get_model("auth", "Permission")
    return Permission.objects.filter(codename__in=RELEASE_MANAGER_PERMISSIONS)


class Migration(migrations.Migration):

    dependencies = [
        ("users", "0004_github_socialapp"),
        # To work with Group and Permission models,
        # we depend on the last migration from the app
        # where the models reside.
        ("auth", "0012_alter_user_first_name_max_length"),
        ("release", "0019_release_cohort"),
    ]

    operations = [migrations.RunPython(make_release_managers_group)]
